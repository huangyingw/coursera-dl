diff --git a/coursera/api.py b/coursera/api.py
index a7a11b1..e9e77ab 100644
--- ./coursera/api.py
+++ ./coursera/api.py
@@ -11,7 +11,6 @@ import base64
 import logging
 import time
 import requests
-import urllib
 
 from collections import namedtuple, OrderedDict
 from six import iterkeys, iteritems
@@ -1433,7 +1432,10 @@ class CourseraOnDemand(object):
                        )
 
         # Return authorization id. This id changes on each request
+        try:
             return dom['elements'][0]['authorizationId']
+        except KeyError:
+            return dom['elements'][0]['id']
 
     def _extract_assignment_text(self, element_id):
         """
diff --git a/coursera/commandline.py b/coursera/commandline.py
index 9047b0a..2fd80d7 100644
--- ./coursera/commandline.py
+++ ./coursera/commandline.py
@@ -341,6 +341,14 @@ def parse_args(args=None):
     group_adv_auth = parser.add_argument_group(
         'Advanced authentication options')
 
+    group_adv_auth.add_argument(
+        '-ca',
+        '--cauth',
+        dest='cookies_cauth',
+        action='store',
+        default=None,
+        help='cauth cookie value from browser')
+
     group_adv_auth.add_argument(
         '-c',
         '--cookies_file',
@@ -492,7 +500,7 @@ def parse_args(args=None):
         logging.error('Cookies file not found: %s', args.cookies_file)
         sys.exit(1)
 
-    if not args.cookies_file:
+    if not args.cookies_file and not args.cookies_cauth:
         try:
             args.username, args.password = get_credentials(
                 username=args.username, password=args.password,
diff --git a/coursera/coursera_dl.py b/coursera/coursera_dl.py
index 8b7c204..64a48db 100644
--- ./coursera/coursera_dl.py
+++ ./coursera/coursera_dl.py
@@ -233,6 +233,9 @@ def main():
         return
 
     session = get_session()
+    if args.cookies_cauth:
+        session.cookies.set('CAUTH', args.cookies_cauth)
+    else:
         login(session, args.username, args.password)
     if args.specialization:
         args.class_names = expand_specializations(session, args.class_names)
